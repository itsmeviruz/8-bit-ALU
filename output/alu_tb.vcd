$date
	Tue Sep 02 23:05:01 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module alu_tb $end
$var wire 1 ! zero $end
$var wire 8 " y [7:0] $end
$var wire 1 # parity $end
$var wire 1 $ invalid_op $end
$var wire 1 % borrow $end
$var wire 1 & Car_out $end
$var reg 8 ' A [7:0] $end
$var reg 8 ( B [7:0] $end
$var reg 1 ) car_in $end
$var reg 4 * opcode [3:0] $end
$scope module uut $end
$var wire 8 + A [7:0] $end
$var wire 8 , B [7:0] $end
$var wire 1 ) car_in $end
$var wire 4 - opcode [3:0] $end
$var wire 1 ! zero $end
$var wire 1 # parity $end
$var parameter 32 . bus_width $end
$var parameter 4 / op_add $end
$var parameter 4 0 op_add_with_carry $end
$var parameter 4 1 op_and $end
$var parameter 4 2 op_dec $end
$var parameter 4 3 op_inc $end
$var parameter 4 4 op_not $end
$var parameter 4 5 op_rol $end
$var parameter 4 6 op_ror $end
$var parameter 4 7 op_sub $end
$var reg 1 & Car_out $end
$var reg 1 % borrow $end
$var reg 1 $ invalid_op $end
$var reg 8 8 y [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11 7
b1001 6
b1000 5
b111 4
b100 3
b101 2
b110 1
b10 0
b1 /
b1000 .
$end
#0
$dumpvars
b1111 8
b1 -
b101 ,
b1010 +
b1 *
0)
b101 (
b1010 '
0&
0%
0$
0#
b1111 "
0!
$end
#10
1&
0!
b101101 "
b101101 8
b10 *
b10 -
1)
b1100100 (
b1100100 ,
b11001000 '
b11001000 +
#20
1%
1#
0&
0!
b11111011 "
b11111011 8
b11 *
b11 -
0)
b1010 (
b1010 ,
b101 '
b101 +
#30
1&
0%
1!
0#
b0 "
b0 8
b100 *
b100 -
b0 (
b0 ,
b11111111 '
b11111111 +
#40
1%
0!
b11111111 "
b11111111 8
0&
b101 *
b101 -
b0 '
b0 +
#50
0%
1!
b0 "
b0 8
b110 *
b110 -
b1010101 (
b1010101 ,
b10101010 '
b10101010 +
#60
0!
b1010101 "
b1010101 8
b111 *
b111 -
b0 (
b0 ,
#70
0!
b110011 "
b110011 8
b1000 *
b1000 -
b10011001 '
b10011001 +
#80
0!
b11001100 "
b11001100 8
b1001 *
b1001 -
#90
1$
1!
b0 "
b0 8
b1111 *
b1111 -
b0 '
b0 +
#100
